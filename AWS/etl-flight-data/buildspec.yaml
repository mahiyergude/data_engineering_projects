version: 0.2

#This file shows how to package a Python Flask application. 

phases:
  install:
    commands:
      - echo Installing dependencies...
      - pip install -r requirements.txt  # Install dependencies listed in requirements.txt

  pre_build:
    commands:
      - echo Running tests...
      - pytest --junitxml=report.xml  # Run pytest and generate a report in XML format

  build:
    commands:
      - echo Zipping up the application...
      - zip -r app.zip .  # Zip the entire project directory

  post_build:
    commands:
      - echo Build completed. Checking if an artifact has been uploaded to S3...
      - aws s3 ls s3://<OUTPUT-Directory-Name>/artifacts/app.zip || echo "Artifact not found in S3."  # Verify the artifact upload
      - echo All build steps are complete.

artifacts:
  files:
    - app.zip  # Include the zipped code as an artifact
    - report.xml  # Include the test report as an artifact
  discard-paths: yes  # Flatten the directory structure in S3
  base-directory: .  # Root directory for artifacts